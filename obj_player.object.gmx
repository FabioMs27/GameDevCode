<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing variables

hsp = 0;
hsp_carry = 0;

vsp = 0;
grav = 0.2;
canJump = false;
jumpUp = false;

movespeed = 4;
jumpspeed = 7;
springspeed = 12;

canShoot = true;
grounded = false;
cooldown = 0;

isJump = false;
isShoot = false;

state = state.normal;

ammo = global.target_ammo;
energy = global.target_energy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Setting states
switch (state)
{
case state.normal:



//Getting input
scr_input();

//Collision
scr_collision();

//Movement
move = key_right + key_left;
hsp = move*movespeed;
vsp += grav;

//Jump
if(max(keyboard_check_pressed(vk_up),keyboard_check_pressed(ord('W'))) &amp;&amp; canJump = true)
{
    vsp = -jumpspeed;
    jumpUp = false;
}

if (grounded == true)
{
    canJump = true;
}
else 
{
    if (jumpUp == true)
    {
        canJump = true;
    }
    else canJump = false;
}

//check floor
if (place_meeting(x,y+1,obj_wall))
{
    grounded = true;
}
else grounded = false;


//normal bullet 

if (cooldown &gt; 0) //Cooldown
{
    cooldown -=1;
}
else isShoot = false;

//Creating the bullet
if (keyboard_check_pressed(vk_space) &amp;&amp; canShoot = true &amp;&amp; instance_number(obj_bullet) &lt; 1 &amp;&amp; cooldown == 0 &amp;&amp; ammo &gt; 0)
{
    instance_create(x+30*(image_xscale),y,obj_bullet);
    obj_bullet.speed = 8*image_xscale;
    cooldown = 30;
    isShoot = true;
    ammo -=1;
}

//Creating the energy
if (keyboard_check_pressed(vk_shift) &amp;&amp; canShoot = true &amp;&amp; cooldown == 0 &amp;&amp; grounded == true &amp;&amp; energy &gt; 0)
{
    instance_create(x+5*(image_xscale),y,obj_energy);
    cooldown = 30;
    isShoot = true;
    state = state.shooting;
}



//Animation
scr_player_animation();

break;
case state.shooting: scr_shootState(); break;
}



//showing ammo
global.ammo = ammo;
global.energy = energy;



//Room collision
if x &lt;  0
{
    x = 0;
}
if x &gt; room_width
{
    x = room_width;
}

if y&lt;0 //0 being the top of the room
{
    y = 0;
}
else if y &gt; room_height // Death setting
{
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
